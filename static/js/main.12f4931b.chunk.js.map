{"version":3,"sources":["listItems.js","Title.js","DatePickers.js","Suggestion.js","utils.js","DataRows.js","Employees.js","useStyles.js","InitData.js","Dashboard.js","serviceWorker.js","index.js"],"names":["VIEWS","EMPLOYEES","TIMEOFF","MainListItems","_ref","dispatchView","react_default","a","createElement","ListItem","button","onClick","type","ListItemIcon","People_default","ListItemText","primary","WorkOff_default","Title","props","Typography","component","variant","color","gutterBottom","children","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","DatePickers","defaultTime","handle","classes","className","noValidate","TextField","defaultValue","InputLabelProps","shrink","onChange","root","flexGrow","input","padding","height","valueContainer","flex","alignItems","overflow","chip","margin","chipFocused","backgroundColor","emphasize","palette","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","Object","objectWithoutProperties","assign","ref","components","Control","fullWidth","InputProps","inputProps","objectSpread","selectProps","innerRef","innerProps","TextFieldProps","Menu","Paper","square","MultiValue","Chip","tabIndex","label","clsx","defineProperty","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","Option","MenuItem","selected","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","IntegrationReactSelect","_ref2","suggestions","defaultVal","callBack","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","single","setSingle","selectStyles","base","text","& input","font","NoSsr","react_select_esm","styles","options","value","EmployeeInfo","io","arguments","length","undefined","id","firstName","lastName","role","startDate","classCallCheck","this","createClass","key","get","concat","set","name","str","trim","test","isValidName","replace","char","toUpperCase","nameArr","split","pop","join","TimeOffInfo","employeeId","timeOffStart","timeOffEnd","roles","getNameSuggestions","rows","map","person","fullName","getNameIdTable","result","forEach","row","getVacationRows","vacationData","employeeData","nameIdTable","filter","vacation","IO_OPTIONS","SORT_OPTIONS","isValidData","object","Date","field","CREATE","READ","UPDATE","DELETE","icon","SHOW_EDIT_OPTION","HIDE_EDIT_OPTION","editMenuReducer","state","action","handleDataUpdate","e","setGenericState","fieldName","target","attributes","EmployeeRow","idx","_useReducer","useReducer","_useReducer2","editMenu","dispatchEditMenu","_useContext","useContext","EmployeeContext","dispatchEmployees","newEmployeeId","setNewEmployeeId","_useState","_useState2","setEmployeeData","TableRow","onMouseEnter","onMouseLeave","TableCell","Suggestion","eventValue","toLocaleDateString","src_DatePickers","Check_default","data","Fragment","Edit_default","Delete_default","TimeOffRow","nameSuggestions","newVacationId","setNewVacationId","_row","_useReducer3","_useReducer4","dispatchVacations","VacationContext","_useState3","_useState4","setVacationData","SORT_BY_FULLNAME","SORT_BY_ROLE","SORT_BY_STARTDATE","SORT_BY_TIMEOFFSTART","SORT_BY_TIMEOFFEND","table","tableLayout","Employees","employees","displayCount","setDisplayCount","forceUpdate","useForceUpdate","Table","size","TableHead","TableBody","ele","Link","TimeOff","_useContext2","employeeIDs","vacations","vacationRows","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","flexDirection","fixedHeight","createContext","DRAWER_OPEN","DRAWER_CLOSE","drawerReducer","viewReducer","reducer","unshift","RowToEdit","array","index","sort","b","localeCompare","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","_EMPLOYEES$TIMEOFF$vi","isDrawerOpen","dispatchDrawer","view","_useReducer5","_useReducer6","_useReducer7","_useReducer8","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","noWrap","Drawer","open","ChevronLeft_default","Divider","List","listItems_MainListItems","Container","maxWidth","Grid","Provider","item","xs","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mYAMaA,EACA,YADAA,EAEF,UAGHC,EAAuBD,EAAZE,EAAYF,EAElBG,EAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OAC3BC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMN,EAAa,CAAEO,KAAMX,MACnDK,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAcC,QAAQ,eAExBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMN,EAAa,CAAEO,KAAMV,MACnDI,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAcC,QAAQ,gGCrBb,SAASE,EAAMC,GAC5B,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GACjEL,EAAMM,uBCHPC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,UAAW,CACTC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,GAC3BE,MAAO,QAsBIC,MAlBf,SAAAjC,GAA8C,IAAvBkC,EAAuBlC,EAAvBkC,YAAaC,EAAUnC,EAAVmC,OAC5BC,EAAUd,IAEhB,OACEpB,EAAAC,EAAAC,cAAA,QAAMiC,UAAWD,EAAQX,UAAWa,YAAU,GAC5CpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACE/B,KAAK,OACLgC,aAAcN,EACdG,UAAWD,EAAQR,UACnBa,gBAAiB,CACfC,QAAQ,GAEVC,SAAUR,kGCdZb,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoB,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLpB,QAAS,OACTqB,QAAS,EACTC,OAAQ,QAEVC,eAAgB,CACdvB,QAAS,OACTC,SAAU,OACVuB,KAAM,EACNC,WAAY,SACZC,SAAU,UAEZC,KAAM,CACJC,OAAQ9B,EAAMM,QAAQ,GAAK,MAE7ByB,YAAa,CACXC,gBAAiBC,qBAAiC,UAAvBjC,EAAMkC,QAAQlD,KAAmBgB,EAAMkC,QAAQC,KAAK,KAAOnC,EAAMkC,QAAQC,KAAK,KAAM,MAEjHC,iBAAkB,CAChBb,QAASvB,EAAMM,QAAQ,EAAG,IAE5B+B,YAAa,CACXC,SAAU,IAEZC,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRJ,SAAU,IAEZK,MAAO,CACLH,SAAU,WACVI,OAAQ,EACRC,UAAW7C,EAAMM,QAAQ,GACzBmC,KAAM,EACNK,MAAO,GAETC,QAAS,CACPvB,OAAQxB,EAAMM,QAAQ,OAkB1B,SAAS0C,GAATxE,GAAgD,IAAtByE,EAAsBzE,EAAtByE,SAAa1D,EAAS2D,OAAAC,EAAA,EAAAD,CAAA1E,EAAA,cAC9C,OAAOE,EAAAC,EAAAC,cAAA,MAAAsE,OAAAE,OAAA,CAAKC,IAAKJ,GAAc1D,IA+HjC,IAAM+D,GAAa,CACjBC,QAzHF,SAAiBhE,GACf,OACEb,EAAAC,EAAAC,cAACmC,EAAA,EAADmC,OAAAE,OAAA,CACEI,WAAS,EACTC,WAAY,CACVT,kBACAU,WAAWR,OAAAS,EAAA,EAAAT,CAAA,CACTrC,UAAWtB,EAAMqE,YAAYhD,QAAQU,MACrC2B,SAAU1D,EAAMsE,SAChBhE,SAAUN,EAAMM,UACbN,EAAMuE,cAGTvE,EAAMqE,YAAYG,kBA6G1BC,KAhBF,SAAczE,GACZ,OACEb,EAAAC,EAAAC,cAACqF,EAAA,EAADf,OAAAE,OAAA,CAAOc,QAAM,EAACrD,UAAWtB,EAAMqE,YAAYhD,QAAQ+B,OAAWpD,EAAMuE,YACjEvE,EAAMM,WAcXsE,WAtCF,SAAoB5E,GAClB,OACEb,EAAAC,EAAAC,cAACwF,GAAA,EAAD,CACEC,UAAW,EACXC,MAAO/E,EAAMM,SACbgB,UAAW0D,YAAKhF,EAAMqE,YAAYhD,QAAQiB,KAA3BqB,OAAAsB,EAAA,EAAAtB,CAAA,GACZ3D,EAAMqE,YAAYhD,QAAQmB,YAAcxC,EAAMkF,YAEjDC,SAAUnF,EAAMoF,YAAY5F,QAC5B6F,WAAYlG,EAAAC,EAAAC,cAACiG,GAAAlG,EAAeY,EAAMoF,gBA8BtCG,iBAlJF,SAA0BvF,GACxB,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD0D,OAAAE,OAAA,CAAYzD,MAAM,gBAAgBkB,UAAWtB,EAAMqE,YAAYhD,QAAQwB,kBAAsB7C,EAAMuE,YAChGvE,EAAMM,WAgJXkF,OApGF,SAAgBxF,GACd,OACEb,EAAAC,EAAAC,cAACoG,GAAA,EAAD9B,OAAAE,OAAA,CACEC,IAAK9D,EAAMsE,SACXoB,SAAU1F,EAAMkF,UAChBhF,UAAU,MACVyF,MAAO,CACLC,WAAY5F,EAAM6F,WAAa,IAAM,MAEnC7F,EAAMuE,YACTvE,EAAMM,WA2FXwF,YA9EF,SAAqB9F,GACnB,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD0D,OAAAE,OAAA,CAAYzD,MAAM,gBAAgBkB,UAAWtB,EAAMqE,YAAYhD,QAAQ2B,aAAiBhD,EAAMuE,YAC3FvE,EAAMM,WA4EXyF,YAjEF,SAAqB/F,GACnB,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD0D,OAAAE,OAAA,CAAYvC,UAAWtB,EAAMqE,YAAYhD,QAAQyB,aAAiB9C,EAAMuE,YACrEvE,EAAMM,WA+DX0F,eApDF,SAAwBhG,GACtB,OAAOb,EAAAC,EAAAC,cAAA,OAAKiC,UAAWtB,EAAMqE,YAAYhD,QAAQa,gBAAiBlC,EAAMM,YA2F3D2F,OArCf,SAAAC,GAAoF,IAAlDC,EAAkDD,EAAlDC,YAAaC,EAAqCF,EAArCE,WAAYpD,EAAyBkD,EAAzBlD,YAAaqD,EAAYH,EAAZG,SAChEhF,EAAUd,KACVE,EAAQ6F,cAFoEC,EAGtDC,IAAMC,SAASL,GAHuCM,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA4C,EAAA,GAG3EK,EAH2EF,EAAA,GAGnEG,EAHmEH,EAAA,GAU5EI,EAAe,CACnB/E,MAAO,SAAAgF,GAAI,OAAApD,OAAAS,EAAA,EAAAT,CAAA,GACNoD,EADM,CAET3G,MAAOK,EAAMkC,QAAQqE,KAAKnH,QAC1BoH,UAAW,CACTC,KAAM,eAKZ,OACE/H,EAAAC,EAAAC,cAAA,OAAKiC,UAAWD,EAAQQ,MACtB1C,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CACE/F,QAASA,EACTgG,OAAQP,EACRQ,QAASnB,EACTpC,WAAYA,GACZwD,MAAOX,EACPhF,SAxBR,SAA4B2F,GAC1BV,EAAUU,GACVlB,EAASkB,EAAMA,QAuBTvE,YAAaA,qFChPVwE,GAAb,WACE,SAAAA,IAA2F,IAA/EC,EAA+EC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1E,OAAQG,EAAkEH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7D,EAAGI,EAA0DJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9C,GAAIK,EAA0CL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,GAAIM,EAA2BN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,GAAIO,EAAgBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAI/D,OAAAuE,GAAA,EAAAvE,CAAAwE,KAAAX,GACzFW,KAAKV,GAAKA,EACVU,KAAKN,GAAKA,EACVM,KAAKL,UAAYA,EACjBK,KAAKJ,SAAWA,EAChBI,KAAKH,KAAOA,EACZG,KAAKF,UAAYA,EAPrB,OAAAtE,OAAAyE,GAAA,EAAAzE,CAAA6D,EAAA,EAAAa,IAAA,WAAAC,IAAA,WAUI,SAAAC,OAAUJ,KAAKL,UAAf,KAAAS,OAA4BJ,KAAKJ,WAVrCS,IAAA,SAYeC,GAdoB,IAAAC,EAgB/B,GAhB+BA,EAeJD,EAAKE,OAhBT,SAAAF,GAAI,MAAI,iBAAiBG,KAAKH,GAiBjDI,CADJJ,EAfsCC,EAAII,QAAQ,WAAY,SAAAC,GAAI,OAAIA,EAAKC,iBAgBpD,CACrB,IAAMC,EAAUR,EAAKS,MAAM,KAC3B,GAAID,EAAQtB,OAAS,EAAG,CACtB,IAAMI,EAAWkB,EAAQE,MACnBrB,EAAYmB,EAAQG,KAAK,KAC/BjB,KAAKL,UAAYA,EACjBK,KAAKJ,SAAWA,QApBxBP,EAAA,GA0Ba6B,GACX,SAAAA,IAAsF,IAA1E5B,EAA0EC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArE,OAAQG,EAA6DH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxD,EAAG4B,EAAqD5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxC,GAAI6B,EAAoC7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArB,GAAI8B,EAAiB9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAI/D,OAAAuE,GAAA,EAAAvE,CAAAwE,KAAAkB,GACpFlB,KAAKV,GAAKA,EACVU,KAAKN,GAAKA,EACVM,KAAKmB,WAAaA,EAClBnB,KAAKoB,aAAeA,EACpBpB,KAAKqB,WAAaA,GAITC,GAAQ,CACnB,CAAElC,MAAO,aAAcxC,MAAO,cAC9B,CAAEwC,MAAO,cAAexC,MAAO,eAC/B,CAAEwC,MAAO,eAAgBxC,MAAO,gBAChC,CAAEwC,MAAO,oBAAqBxC,MAAO,qBACrC,CAAEwC,MAAO,qBAAsBxC,MAAO,sBACtC,CAAEwC,MAAO,sBAAuBxC,MAAO,uBACvC,CAAEwC,MAAO,cAAexC,MAAO,eAC/B,CAAEwC,MAAO,eAAgBxC,MAAO,gBAChC,CAAEwC,MAAO,gBAAiBxC,MAAO,iBACjC,CAAEwC,MAAO,MAAOxC,MAAO,OACvB,CAAEwC,MAAO,MAAOxC,MAAO,OACvB,CAAEwC,MAAO,MAAOxC,MAAO,QAGZ2E,GAAqB,SAAAC,GAAI,OACpCA,EAAKC,IAAI,SAAAC,GAAM,MAAK,CAClBtC,MAAOsC,EAAOC,SACd/E,MAAO8E,EAAOC,aAGLC,GAAiB,SAAAJ,GAC5B,IAAMK,EAAS,GAKf,OAJAL,EAAKM,QAAQ,SAAAC,GACXF,EAAOE,EAAIrC,IAAMqC,EAAIJ,SACrBE,EAAOE,EAAIJ,UAAYI,EAAIrC,KAEtBmC,GAGIG,GAAkB,SAACC,EAAcC,GAC5C,IAAMC,EAAcP,GAAeM,GACnC,OAAOD,EACJG,OAAO,SAAAC,GAAQ,OAAIA,EAASlB,cAAcgB,IAC1CV,IAAI,SAAAY,GAEH,OADAA,EAASV,SAAWC,GAAeM,GAAcG,EAASlB,YACnDkB,KAIAC,GACH,SADGA,GAEL,OAFKA,GAGH,SAHGA,GAIH,SAGGC,GACO,mBADPA,GAEG,eAFHA,GAGQ,oBAHRA,GAIW,uBAJXA,GAKS,qBAWTC,GAAc,SAAAC,GACzB,GAAI,eAAgBA,GACd,IAAIC,KAAKD,EAAOrB,cAAgB,IAAIsB,KAAKD,EAAOpB,YAClD,OAAO,EAIX,IAAK,IAAIsB,KAASF,EAChB,GAAsB,KAAlBA,EAAOE,GACT,OAAO,EAGX,OAAO,GCtGDC,GAAiCN,GAAzBO,GAAyBP,GAAnBQ,GAAmBR,GAAXS,GAAWT,GAEnClK,GAAYC,YAAW,CAC3B2K,KAAM,CACJ/K,MAAO,yBAILgL,GAAmB,mBACnBC,GAAmB,mBACzB,SAASC,GAAgBC,EAAOC,GAC9B,OAAQA,EAAO/L,MACb,KAAK2L,GACH,OAAO,EACT,KAAKC,GACH,OAAO,EACT,QACE,OAAOE,GAIb,SAASE,GACPC,EACAH,EACAI,GAIA,IAHAC,EAGAlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHYgE,EAAEG,OAAOC,WAAWrD,KAAKlB,MACrCA,EAEAG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQgE,EAAEG,OAAOtE,MAEjBG,UAAAC,OAAA,GAAAD,UAAA,GACA6D,EAAMK,GAAarE,EACnBoE,EAAgBJ,GAMX,SAASQ,GAAT9M,GAAmC,IAAZiL,EAAYjL,EAAZiL,IAAK8B,EAAO/M,EAAP+M,IAC3B3K,EAAUd,KADwB0L,EAEHC,qBAAWZ,IAAiB,GAFzBa,EAAAxI,OAAAgD,EAAA,EAAAhD,CAAAsI,EAAA,GAEjCG,EAFiCD,EAAA,GAEvBE,EAFuBF,EAAA,GAAAG,EAGuBC,qBAAWC,IAAlEC,EAHgCH,EAGhCG,kBAAmBC,EAHaJ,EAGbI,cAAeC,EAHFL,EAGEK,iBAErCzC,IACHA,EAAM,IAAI1C,GAAayD,GAAQyB,IANO,IAAAE,EAQAnG,mBAASyD,GART2C,EAAAlJ,OAAAgD,EAAA,EAAAhD,CAAAiJ,EAAA,GAQjCvC,EARiCwC,EAAA,GAQnBC,EARmBD,EAAA,GAUxC,OACE1N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CACEC,aAAc,kBAAMX,EAAiB,CAAE5M,KAAM2L,MAC7C6B,aAAc,kBAAMZ,EAAiB,CAAE5M,KAAM4L,OAC7ClM,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KAEG7C,EAAa5C,KAAOuD,GACnBd,EAAIJ,SAEJ3K,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEiH,KAAK,WACLhH,aAAcyI,EAAIJ,SAClBlI,SAAU,SAAA8J,GACRD,GAAiBC,EAAGrB,EAAcyC,OAK1C3N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KAEG7C,EAAa5C,KAAOuD,GACnBd,EAAIlC,KAEJ7I,EAAAC,EAAAC,cAAC8N,GAADxJ,OAAAE,OAAA,CACE4E,KAAK,OACLpC,SAAU,SAAA+G,GACR3B,GAAiB,KAAMpB,EAAcyC,EAAiB,OAAQM,KAE5D,CAAEjH,YAAasD,GAAOrD,WAAYiE,EAAarC,KAAMhF,YAAaqH,EAAarC,SAIzF7I,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KAEGhD,EAAIzC,KAAOuD,GACV,IAAIH,KAAKX,EAAIjC,WAAWoF,mBAAmB,SAE3ClO,EAAAC,EAAAC,cAACiO,EAAD,CACEnM,YAAa+I,EAAIjC,UACjBQ,KAAK,YACLrH,OAAQ,SAAAsK,GACND,GAAiBC,EAAGrB,EAAcyC,EAAiB,YAAapB,EAAEG,OAAOtE,WAKjFpI,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KACGvC,GAAYN,IAAiBA,EAAa5C,KAAOwD,GAEhD9L,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,CACEkC,UAAWD,EAAQ8J,KACnB3L,QAAS,SAAAkM,GACHgB,GACFC,EAAiB,SAAA9E,GACf,OAAOA,EAAK,IAEd4D,GAAiB,KAAMpB,EAAcyC,EAAiB,KAAM9B,IAC5DyB,EAAkB,CAAEhN,KAAMsL,GAAQyC,KAAMnD,IACxCyC,EAAgB,IAAItF,GAAayD,GAAQyB,EAAgB,KAEzDD,EAAkB,CAAEhN,KAAMuL,GAAMnD,GAAImE,OAIxCI,EACFjN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,KACEtO,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CACEkC,UAAWD,EAAQ8J,KACnB3L,QAAS,kBAAMiN,EAAkB,CAAEhN,KAAMwL,GAAQpD,GAAImE,EAAKwB,KAAMnD,OAElElL,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CAAYkC,UAAWD,EAAQ8J,KAAM3L,QAAS,kBAAMiN,EAAkB,CAAEhN,KAAMyL,GAAQrD,GAAImE,QAG5F7M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,QAWH,SAASG,GAAT1H,GAAiG,IAA3E8F,EAA2E9F,EAA3E8F,IAAK9B,EAAsEhE,EAAtEgE,IAAK2D,EAAiE3H,EAAjE2H,gBAAiBC,EAAgD5H,EAAhD4H,cAAeC,EAAiC7H,EAAjC6H,iBAAkBzD,EAAepE,EAAfoE,YAClFJ,IACHA,EAAM,IAAIb,GAAY4B,GAAQ6C,IAFsE,IAAAE,EAInD9D,EAA3CzC,EAJ8FuG,EAI9FvG,GAAIqC,EAJ0FkE,EAI1FlE,SAAUP,EAJgFyE,EAIhFzE,aAAcC,EAJkEwE,EAIlExE,WAC9BnI,EAAUd,KALsF0N,EAMjE/B,qBAAWZ,IAAiB,GANqC4C,EAAAvK,OAAAgD,EAAA,EAAAhD,CAAAsK,EAAA,GAM/F7B,EAN+F8B,EAAA,GAMrF7B,EANqF6B,EAAA,GAO9FC,EAAsB5B,qBAAW6B,IAAjCD,kBAP8FE,EAQ9D5H,mBAASyD,GARqDoE,EAAA3K,OAAAgD,EAAA,EAAAhD,CAAA0K,EAAA,GAQ/FjE,EAR+FkE,EAAA,GAQjFC,EARiFD,EAAA,GAUtG,OACEnP,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CACEC,aAAc,kBAAMX,EAAiB,CAAE5M,KAAM2L,MAC7C6B,aAAc,kBAAMZ,EAAiB,CAAE5M,KAAM4L,OAC7ClM,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KACGY,EACC3O,EAAAC,EAAAC,cAAC8N,GAADxJ,OAAAE,OAAA,CACE4E,KAAK,WACLpC,SAAU,SAAA+G,GACR3B,GAAiB,KAAMrB,EAAcmE,EAAiB,aAAcjE,EAAY8C,MAE9E,CAAEjH,YAAa0H,EAAiBzH,WAAY,GAAIpD,YAAa,qBAGnE8G,GAGJ3K,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KAEGzF,IAAOuD,GACN,IAAIH,KAAKtB,GAAc8D,mBAAmB,SAE1ClO,EAAAC,EAAAC,cAACiO,EAAD,CACEnM,YAAaoI,EACbd,KAAK,eACLrH,OAAQ,SAAAsK,GACND,GAAiBC,EAAGtB,EAAcmE,EAAiB,eAAgB7C,EAAEG,OAAOtE,WAKpFpI,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KAEGzF,IAAOuD,GACN,IAAIH,KAAKrB,GAAY6D,mBAAmB,SAExClO,EAAAC,EAAAC,cAACiO,EAAD,CACEnM,YAAaqI,EACbf,KAAK,aACLrH,OAAQ,SAAAsK,GACND,GAAiBC,EAAGtB,EAAcmE,EAAiB,aAAc7C,EAAEG,OAAOtE,WAKlFpI,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,KACGvC,GAAYP,IAAiB3C,IAAOwD,GAEnC9L,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,CACEkC,UAAWD,EAAQ8J,KACnB3L,QAAS,WACHsO,GACFC,EAAiB,SAAAlG,GACf,OAAOA,EAAK,IAEd4D,GAAiB,KAAMrB,EAAcmE,EAAiB,KAAMvD,IAC5DmD,EAAkB,CAAE1O,KAAMsL,GAAQyC,KAAMpD,IAExCmE,EAAgB,IAAIlF,GAAY4B,GAAQ6C,EAAgB,KAExDK,EAAkB,CAAE1O,KAAMuL,GAAMnD,GAAImE,OAIxCI,EACFjN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,KACEtO,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,CACEkC,UAAWD,EAAQ8J,KACnB3L,QAAS,kBAAM2O,EAAkB,CAAE1O,KAAMwL,GAAQpD,GAAImE,EAAKwB,KAAMpD,OAElEjL,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CAAYkC,UAAWD,EAAQ8J,KAAM3L,QAAS,kBAAM2O,EAAkB,CAAE1O,KAAMyL,GAAQrD,GAAImE,QAG5F7M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,YCjNFe,GAAgG9D,GAA9E+D,GAA8E/D,GAAhEgE,GAAgEhE,GAA7CiE,GAA6CjE,GAAvBkE,GAAuBlE,GAElGnK,GAAYC,YAAW,CAC3BqO,MAAO,CACLC,YAAa,WAQV,SAASC,KACd,IAAM1N,EAAUd,KADU+L,EAEgDC,qBAAWC,IAA7EwC,EAFkB1C,EAElB0C,UAAWvC,EAFOH,EAEPG,kBAAmBC,EAFZJ,EAEYI,cAAeC,EAF3BL,EAE2BK,iBAF3BC,EAGcnG,mBAAS,GAHvBoG,EAAAlJ,OAAAgD,EAAA,EAAAhD,CAAAiJ,EAAA,GAGnBqC,EAHmBpC,EAAA,GAGLqC,EAHKrC,EAAA,GAIpBsC,EAAcC,MAEpB,OACEjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,KACEtO,EAAAC,EAAAC,cAACU,EAAD,yBACAZ,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,CAAOC,KAAK,QAAQhO,UAAWD,EAAQwN,OACrC1P,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,KACE5N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,WACLjJ,QAAS,WACPiN,EAAkB,CAAEhN,KAAM+O,KAC1BW,MAJJ,QAQAhQ,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,OACLjJ,QAAS,WACPiN,EAAkB,CAAEhN,KAAMgP,KAC1BU,MAJJ,QAQAhQ,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,YACLjJ,QAAS,WACPiN,EAAkB,CAAEhN,KAAMiP,KAC1BS,MAJJ,gBAUJhQ,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,KAEErQ,EAAAC,EAAAC,cAAC0M,GAADpI,OAAAE,OAAA,CAAavC,UAAU,sBAAyB,CAAEoL,gBAAeC,sBAChEqC,EACEzE,OAAO,SAACkF,EAAKzD,GAAN,OAAcA,EAAMiD,IAC3BrF,IAAI,SAACM,EAAK8B,GACT,OAAO7M,EAAAC,EAAAC,cAAC0M,GAAgB,CAAE7B,MAAK7B,IAAK2D,EAAKA,YAIjD7M,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,qBACbnC,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAMtP,MAAM,UAAUZ,QAAS,kBAAM0P,EAAgBD,EAAe,KAApE,wBAYD,SAASU,KACd,IAAMtO,EAAUd,KADQqP,EAE0ErD,qBAChG6B,IADMD,EAFgByB,EAEhBzB,kBAAmB0B,EAFHD,EAEGC,YAAab,EAFhBY,EAEgBZ,UAAWc,EAF3BF,EAE2BE,UAAWhC,EAFtC8B,EAEsC9B,cAAeC,EAFrD6B,EAEqD7B,iBAGvEgC,EAAe5F,GAAgB2F,EAAWd,EAAWa,GACrDhC,EAAkBnE,GAAmBsF,GANnBX,EAOgB5H,mBAAS,GAPzB6H,EAAA3K,OAAAgD,EAAA,EAAAhD,CAAA0K,EAAA,GAOjBY,EAPiBX,EAAA,GAOHY,EAPGZ,EAAA,GASlBhE,EAAcP,GAAeiF,GAC7BG,EAAcC,MAEpB,OACEjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqO,SAAA,KACEtO,EAAAC,EAAAC,cAACU,EAAD,iBACAZ,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,CAAOC,KAAK,QAAQhO,UAAWD,EAAQwN,OACrC1P,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,KACE5N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,WACLjJ,QAAS,WACP2O,EAAkB,CAAE1O,KAAM+O,KAC1BW,MAJJ,QAQAhQ,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,eACLjJ,QAAS,WACP2O,EAAkB,CAAE1O,KAAMkP,KAC1BQ,MAJJ,kBAQAhQ,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CACEzE,KAAK,aACLjJ,QAAS,WACP2O,EAAkB,CAAE1O,KAAMmP,KAC1BO,MAJJ,kBAUJhQ,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,KACErQ,EAAAC,EAAAC,cAACuO,GAADjK,OAAAE,OAAA,CACEvC,UAAU,qBACN,CAAEwM,gBAAeC,mBAAkBzD,cAAauD,qBAErDkC,EACExF,OAAO,SAACkF,EAAKzD,GAAN,OAAcA,EAAMiD,IAC3BrF,IAAI,SAACM,EAAK8B,GAAN,OAEH7M,EAAAC,EAAAC,cAACuO,GAAe,CAAE1D,MAAK7B,IAAK6B,EAAIrC,GAAImE,YAI5C7M,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,qBACbnC,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAMtP,MAAM,UAAUZ,QAAS,kBAAM0P,EAAgBD,EAAe,KAApE,wBCjJR,IAEa1O,GAAYC,YAAW,SAAAC,GAAK,MAAK,CAC5CoB,KAAM,CACJlB,QAAS,QAEXqP,QAAS,CACPC,aAAc,IAEhBC,YAAYvM,OAAAS,EAAA,EAAAT,CAAA,CACVhD,QAAS,OACTyB,WAAY,SACZ+N,eAAgB,WAChBnO,QAAS,SACNvB,EAAM2P,OAAOJ,SAElBK,OAAQ,CACNhN,OAAQ5C,EAAM4C,OAAOiN,OAAS,EAC9BC,WAAY9P,EAAM+P,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQjQ,EAAM+P,YAAYE,OAAOC,MACjCC,SAAUnQ,EAAM+P,YAAYI,SAASC,iBAGzCC,YAAa,CACXhQ,WAxBgB,IAyBhBG,MAAK,eAAAsH,OAzBW,IAyBX,OACLgI,WAAY9P,EAAM+P,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQjQ,EAAM+P,YAAYE,OAAOC,MACjCC,SAAUnQ,EAAM+P,YAAYI,SAASG,kBAGzCC,WAAY,CACVhQ,YAAa,IAEfiQ,iBAAkB,CAChBtQ,QAAS,QAEXuQ,MAAO,CACLpP,SAAU,GAEZqP,YAAa,CACXlO,SAAU,WACVmO,WAAY,SACZnQ,MA3CgB,IA4ChBsP,WAAY9P,EAAM+P,YAAYC,OAAO,QAAS,CAC5CC,OAAQjQ,EAAM+P,YAAYE,OAAOC,MACjCC,SAAUnQ,EAAM+P,YAAYI,SAASG,kBAGzCM,iBAAiB1N,OAAAsB,EAAA,EAAAtB,CAAA,CACf2N,UAAW,SACXf,WAAY9P,EAAM+P,YAAYC,OAAO,QAAS,CAC5CC,OAAQjQ,EAAM+P,YAAYE,OAAOC,MACjCC,SAAUnQ,EAAM+P,YAAYI,SAASC,gBAEvC5P,MAAOR,EAAMM,QAAQ,IACpBN,EAAM8Q,YAAYC,GAAG,MAAQ,CAC5BvQ,MAAOR,EAAMM,QAAQ,KAGzB0Q,aAAchR,EAAM2P,OAAOJ,QAC3B0B,QAAS,CACP5P,SAAU,EACVG,OAAQ,QACRI,SAAU,QAEZ3B,UAAW,CACTiR,WAAYlR,EAAMM,QAAQ,GAC1B6Q,cAAenR,EAAMM,QAAQ,IAE/BqC,MAAO,CACLpB,QAASvB,EAAMM,QAAQ,GACvBJ,QAAS,OACT0B,SAAU,OACVwP,cAAe,UAEjBC,YAAa,CACX7P,OAAQ,QC9EJ+I,GAASP,GAEJJ,GAAe,CAC1B,IAAI7C,GAAawD,GAAM,EAAG,OAAQ,YAAavB,GAAM,GAAGlC,MAAO,cAC/D,IAAIC,GAAawD,GAAM,EAAG,MAAO,SAAUvB,GAAM,GAAGlC,MAAO,cAC3D,IAAIC,GAAawD,GAAM,EAAG,UAAW,UAAWvB,GAAM,IAAIlC,MAAO,cACjE,IAAIC,GAAawD,GAAM,EAAG,QAAS,cAAevB,GAAM,GAAGlC,MAAO,cAClE,IAAIC,GAAawD,GAAM,EAAG,QAAS,UAAWvB,GAAM,GAAGlC,MAAO,eAGnD6C,GAAe,CAC1B,IAAIf,GAAY2B,GAAM,EAAG,EAAG,aAAc,cAC1C,IAAI3B,GAAY2B,GAAM,EAAG,EAAG,aAAc,cAC1C,IAAI3B,GAAY2B,GAAM,EAAG,EAAG,aAAc,cAC1C,IAAI3B,GAAY2B,GAAM,EAAG,EAAG,aAAc,eCMpCD,IDHarB,GAAmBW,ICGCI,IAAzBO,GAAyBP,GAAnBQ,GAAmBR,GAAXS,GAAWT,GACjC+D,GAAgG9D,GAA9E+D,GAA8E/D,GAAhEgE,GAAgEhE,GAA7CiE,GAA6CjE,GAAvBkE,GAAuBlE,GAM3F8B,GAAkBhG,IAAMuL,gBACxB3D,GAAkB5H,IAAMuL,gBAK/BC,GAAc,OACdC,GAAe,QACfC,GAAgB,SAAC3G,EAAOC,GAC5B,OAAQA,EAAO/L,MACb,KAAKuS,GACH,OAAO,EACT,KAAKC,GACH,OAAO,EACT,QACE,OAAO1G,IAOLzM,GAAuBD,EAAZE,GAAYF,EAEzBsT,GAAc,SAAC5G,EAAOC,GAC1B,OAAQA,EAAO/L,MACb,KAAKX,GACH,OAAOA,GACT,KAAKC,GACH,OAAOA,GACT,QACE,OAAOwM,IAOP6G,GAAU,SAAC7G,EAAOC,GACtB,OAAQA,EAAO/L,MACb,KAAKsL,GAIH,OAHIS,EAAOgC,MACTjC,EAAM8G,QAAQ7G,EAAOgC,MAEhBjC,EACT,KAAKN,GACH,GAAyB,kBAAdO,EAAO3D,GAAiB,CACjC,IAAMyK,EAAY/G,EAAMC,EAAO3D,IAC/B,GAAIyK,EAAU7K,KAAOwD,GAEnB,OADAqH,EAAU7K,GAAKwD,GACRM,EAGX,OAAOA,EACT,KAAKP,GACH,GAAyB,kBAAdQ,EAAO3D,GAAiB,CACjC,IAAMyK,EAAY/G,EAAMC,EAAO3D,IAC/B,GAAIyK,EAAU7K,KAAOuD,GAEnB,OADAsH,EAAU7K,GAAKuD,GACRO,EAGX,OAAOA,EACT,KAAKL,GACH,MAAyB,kBAAdM,EAAO3D,ILEE0K,EKDDhH,GLCQiH,EKDDhH,EAAO3D,ILEzB0K,EAAM5K,OACT4K,EAAMhI,OAAO,SAACkF,EAAKzD,GAAN,OAAcA,IAAQwG,IAEnCD,GKHEhH,EACT,KAAKiD,GAEH,OADAjD,EAAMkH,KAAK,SAACrT,EAAGsT,GAAJ,OAAW,GAAKtT,EAAE0K,UAAU6I,cAAcD,EAAE5I,YAChDyB,EACT,KAAKkD,GAEH,OADAlD,EAAMkH,KAAK,SAACrT,EAAGsT,GAAJ,OAAW,GAAKtT,EAAE4I,MAAM2K,cAAcD,EAAE1K,QAC5CuD,EACT,KAAKmD,GAEH,OADAnD,EAAMkH,KAAK,SAACrT,EAAGsT,GAAJ,OAAU,IAAI7H,KAAKzL,EAAE6I,WAAa,IAAI4C,KAAK6H,EAAEzK,aACjDsD,EACT,KAAKoD,GAEH,OADApD,EAAMkH,KAAK,SAACrT,EAAGsT,GAAJ,OAAU,IAAI7H,KAAKzL,EAAEmK,cAAgB,IAAIsB,KAAK6H,EAAEnJ,gBACpDgC,EACT,KAAKqD,GAEH,OADArD,EAAMkH,KAAK,SAACrT,EAAGsT,GAAJ,OAAU,IAAI7H,KAAKzL,EAAEoK,YAAc,IAAIqB,KAAK6H,EAAElJ,cAClD+B,EACT,QACE,OAAOA,ELlBY,IAACgH,EAAOC,GMlFjC,IAAMI,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpI,QACf8H,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,YC1FjEC,IAASC,OAAOnV,EAAAC,EAAAC,cFiHD,WAAqB,IAAAkV,EAC5BlT,EAAUd,KADkB0L,EAEKC,qBAAWgG,IAAe,GAF/B/F,EAAAxI,OAAAgD,EAAA,EAAAhD,CAAAsI,EAAA,GAE3BuI,EAF2BrI,EAAA,GAEbsI,EAFatI,EAAA,GAAA8B,EAGL/B,qBAAWiG,GAAarT,IAHnBoP,EAAAvK,OAAAgD,EAAA,EAAAhD,CAAAsK,EAAA,GAG3ByG,EAH2BxG,EAAA,GAGrBhP,EAHqBgP,EAAA,GAAAyG,EAIKzI,qBAAWkG,GAAS/H,IAJzBuK,EAAAjR,OAAAgD,EAAA,EAAAhD,CAAAgR,EAAA,GAI3B3F,EAJ2B4F,EAAA,GAIhBnI,EAJgBmI,EAAA,GAAAC,EAKK3I,qBAAWkG,GAAShI,IALzB0K,EAAAnR,OAAAgD,EAAA,EAAAhD,CAAAkR,EAAA,GAK3B/E,EAL2BgF,EAAA,GAKhB3G,EALgB2G,EAAA,GAAAlI,EAMQnG,mBAAS,IANjBoG,EAAAlJ,OAAAgD,EAAA,EAAAhD,CAAAiJ,EAAA,GAM3BF,EAN2BG,EAAA,GAMZF,EANYE,EAAA,GAAAwB,EAOQ5H,mBAAS,IAPjB6H,EAAA3K,OAAAgD,EAAA,EAAAhD,CAAA0K,EAAA,GAO3BP,EAP2BQ,EAAA,GAOZP,EAPYO,EAAA,GASlC,OACEnP,EAAAC,EAAAC,cAAA,OAAKiC,UAAWD,EAAQQ,MACtB1C,EAAAC,EAAAC,cAAC0V,EAAA,EAAD,MACA5V,EAAAC,EAAAC,cAAC2V,EAAA,EAAD,CAAQ/R,SAAS,WAAW3B,UAAW0D,YAAK3D,EAAQgP,OAAQmE,GAAgBnT,EAAQyP,cAClF3R,EAAAC,EAAAC,cAAC4V,EAAA,EAAD,CAAS3T,UAAWD,EAAQ2O,SAC1B7Q,EAAAC,EAAAC,cAAC6V,EAAA,EAAD,CACEC,KAAK,QACL/U,MAAM,UACNgV,aAAW,cACX5V,QAAS,kBAAMiV,EAAe,CAAEhV,KAAMuS,MACtC1Q,UAAW0D,YAAK3D,EAAQ2P,WAAYwD,GAAgBnT,EAAQ4P,mBAC5D9R,EAAAC,EAAAC,cAACgW,EAAAjW,EAAD,OAEFD,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUkV,QAAM,EAAChU,UAAWD,EAAQ6P,OAAlF,wBAKJ/R,EAAAC,EAAAC,cAACkW,EAAA,EAAD,CACEpV,QAAQ,YACRkB,QAAS,CACP+B,MAAO4B,YAAK3D,EAAQ8P,aAAcqD,GAAgBnT,EAAQgQ,mBAE5DmE,KAAMhB,GACNrV,EAAAC,EAAAC,cAAA,OAAKiC,UAAWD,EAAQ6O,aACtB/Q,EAAAC,EAAAC,cAAC6V,EAAA,EAAD,CAAY1V,QAAS,kBAAMiV,EAAe,CAAEhV,KAAMwS,OAChD9S,EAAAC,EAAAC,cAACoW,EAAArW,EAAD,QAGJD,EAAAC,EAAAC,cAACqW,EAAA,EAAD,MACAvW,EAAAC,EAAAC,cAACsW,EAAA,EAAD,KACExW,EAAAC,EAAAC,cAACuW,EAAkB,CAAE1W,mBAGzBC,EAAAC,EAAAC,cAAA,QAAMiC,UAAWD,EAAQqQ,SACvBvS,EAAAC,EAAAC,cAAA,OAAKiC,UAAWD,EAAQoQ,eACxBtS,EAAAC,EAAAC,cAACwW,EAAA,EAAD,CAAWC,SAAS,KAAKxU,UAAWD,EAAQX,WAC1CvB,EAAAC,EAAAC,cAAC0W,EAAA,EAAD,CAAMrV,WAAS,EAACK,QAAS,IAGrBwT,EAAA,GAAA5Q,OAAAsB,EAAA,EAAAtB,CAAA4Q,EACGzV,GACCK,EAAAC,EAAAC,cAACmN,GAAgBwJ,SAAjB,CAA0BzO,MAAO,CAAEyH,YAAWvC,oBAAmBC,gBAAeC,qBAC9ExN,EAAAC,EAAAC,cAAC0W,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb/W,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOpD,UAAWD,EAAQ+B,OACxBjE,EAAAC,EAAAC,cAAC0P,GAAD,UALVpL,OAAAsB,EAAA,EAAAtB,CAAA4Q,EAUGxV,GACCI,EAAAC,EAAAC,cAAC+O,GAAgB4H,SAAjB,CACEzO,MAAO,CAAEyH,YAAWc,YAAW3B,oBAAmBL,gBAAeC,qBACjE5O,EAAAC,EAAAC,cAAC0W,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb/W,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAOpD,UAAWD,EAAQ+B,OACxBjE,EAAAC,EAAAC,cAACsQ,GAAD,UAfV4E,GAoBEG,QEtLA,MAAeyB,SAASC,eAAe,SDgBhD,SAAkBhD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgD,IAAIC,8BAAwBxD,OAAOC,SAASwD,MACpDC,SAAW1D,OAAOC,SAASyD,OAIvC,OAGF1D,OAAO2D,iBAAiB,OAAQ,WAC9B,IAAMtD,EAAK,GAAA5K,OAAM+N,8BAAN,sBAEP1D,IAgEV,SAAiCO,EAAOC,GAEtCsD,MAAMvD,GACHK,KAAK,SAAAmD,GAEJ,IAAMC,EAAcD,EAASE,QAAQvO,IAAI,gBAEnB,MAApBqO,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1D,UAAUC,cAAc0D,MAAMxD,KAAK,SAAAC,GACjCA,EAAawD,aAAazD,KAAK,WAC7BV,OAAOC,SAASmE,aAKpBhE,GAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAmD,CAAwBhE,EAAOC,GAI/BC,UAAUC,cAAc0D,MAAMxD,KAAK,WACjCO,QAAQC,IACN,gHAMJd,GAAgBC,EAAOC,MCvC/BE","file":"static/js/main.12f4931b.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleIcon from '@material-ui/icons/People';\nimport WorkOffIcon from '@material-ui/icons/WorkOff';\nexport const VIEWS = {\n  EMPLOYEES: 'EMPLOYEES',\n  TIMEOFF: 'TIMEOFF'\n};\n\nconst { EMPLOYEES, TIMEOFF } = VIEWS;\n\nexport const MainListItems = ({ dispatchView }) => (\n  <div>\n    <ListItem button onClick={() => dispatchView({ type: EMPLOYEES })}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Employees\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatchView({ type: TIMEOFF })}>\n      <ListItemIcon>\n        <WorkOffIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Time Off\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nfunction DatePickers({ defaultTime, handle }) {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        type=\"date\"\n        defaultValue={defaultTime}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true\n        }}\n        onChange={handle}\n      />\n    </form>\n  );\n}\n\nexport default DatePickers;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n    height: 'auto'\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700], 0.08)\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.noOptionsMessage} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}>\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool\n};\n\nfunction Placeholder(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.placeholder} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={clsx(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nMultiValue.propTypes = {\n  children: PropTypes.node,\n  isFocused: PropTypes.bool,\n  removeProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired\n};\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object\n};\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nfunction IntegrationReactSelect({ suggestions, defaultVal, placeholder, callBack }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [single, setSingle] = React.useState(defaultVal);\n\n  function handleChangeSingle(value) {\n    setSingle(value);\n    callBack(value.value);\n  }\n\n  const selectStyles = {\n    input: base => ({\n      ...base,\n      color: theme.palette.text.primary,\n      '& input': {\n        font: 'inherit'\n      }\n    })\n  };\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          options={suggestions}\n          components={components}\n          value={single}\n          onChange={handleChangeSingle}\n          placeholder={placeholder}\n        />\n      </NoSsr>\n    </div>\n  );\n}\n\nexport default IntegrationReactSelect;\n","export const isValidName = name => /^[a-z ,.'-]+$/i.test(name);\nexport const capitalizeEveryWord = str => str.replace(/\\b[a-z]/g, char => char.toUpperCase());\n\nexport class EmployeeInfo {\n  constructor(io = 'READ', id = 0, firstName = '', lastName = '', role = '', startDate = '') {\n    this.io = io;\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.role = role;\n    this.startDate = startDate;\n  }\n  get fullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  set fullName(name) {\n    name = capitalizeEveryWord(name.trim());\n    if (isValidName(name)) {\n      const nameArr = name.split(' ');\n      if (nameArr.length > 1) {\n        const lastName = nameArr.pop();\n        const firstName = nameArr.join(' ');\n        this.firstName = firstName;\n        this.lastName = lastName;\n      }\n    }\n  }\n}\n\nexport class TimeOffInfo {\n  constructor(io = 'READ', id = 0, employeeId = '', timeOffStart = '', timeOffEnd = '') {\n    this.io = io;\n    this.id = id;\n    this.employeeId = employeeId;\n    this.timeOffStart = timeOffStart;\n    this.timeOffEnd = timeOffEnd;\n  }\n}\n\nexport const roles = [\n  { value: 'Engineer I', label: 'Engineer I' },\n  { value: 'Engineer II', label: 'Engineer II' },\n  { value: 'Engineer III', label: 'Engineer III' },\n  { value: 'Product Manager I', label: 'Product Manager I' },\n  { value: 'Product Manager II', label: 'Product Manager II' },\n  { value: 'Product Manager III', label: 'Product Manager III' },\n  { value: 'Recruiter I', label: 'Recruiter I' },\n  { value: 'Recruiter II', label: 'Recruiter II' },\n  { value: 'Recruiter III', label: 'Recruiter III' },\n  { value: 'CEO', label: 'CEO' },\n  { value: 'COO', label: 'COO' },\n  { value: 'CTO', label: 'CTO' }\n];\n\nexport const getNameSuggestions = rows =>\n  rows.map(person => ({\n    value: person.fullName,\n    label: person.fullName\n  }));\n\nexport const getNameIdTable = rows => {\n  const result = {};\n  rows.forEach(row => {\n    result[row.id] = row.fullName;\n    result[row.fullName] = row.id;\n  });\n  return result;\n};\n\nexport const getVacationRows = (vacationData, employeeData) => {\n  const nameIdTable = getNameIdTable(employeeData);\n  return vacationData\n    .filter(vacation => vacation.employeeId in nameIdTable)\n    .map(vacation => {\n      vacation.fullName = getNameIdTable(employeeData)[vacation.employeeId];\n      return vacation;\n    });\n};\n\nexport const IO_OPTIONS = {\n  CREATE: 'CREATE',\n  READ: 'READ',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE'\n};\n\nexport const SORT_OPTIONS = {\n  SORT_BY_FULLNAME: 'SORT_BY_FULLNAME',\n  SORT_BY_ROLE: 'SORT_BY_ROLE',\n  SORT_BY_STARTDATE: 'SORT_BY_STARTDATE',\n  SORT_BY_TIMEOFFSTART: 'SORT_BY_TIMEOFFSTART',\n  SORT_BY_TIMEOFFEND: 'SORT_BY_TIMEOFFEND'\n};\n\nexport const removeRow = (array, index) => {\n  if (index < array.length) {\n    return array.filter((ele, idx) => idx !== index);\n  } else {\n    return array;\n  }\n};\n\nexport const isValidData = object => {\n  if ('employeeId' in object) {\n    if (new Date(object.timeOffStart) > new Date(object.timeOffEnd)) {\n      return false;\n    }\n  }\n\n  for (let field in object) {\n    if (object[field] === '') {\n      return false;\n    }\n  }\n  return true;\n};\n","import React, { useReducer, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport DatePickers from './DatePickers';\nimport Suggestion from './Suggestion';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { EmployeeInfo, TimeOffInfo, roles, IO_OPTIONS, isValidData } from './utils';\nimport { EmployeeContext, VacationContext } from './Dashboard';\nconst { CREATE, READ, UPDATE, DELETE } = IO_OPTIONS;\n\nconst useStyles = makeStyles({\n  icon: {\n    color: 'rgba(0, 0, 0, 0.54)'\n  }\n});\n\nconst SHOW_EDIT_OPTION = 'SHOW_EDIT_OPTION';\nconst HIDE_EDIT_OPTION = 'HIDE_EDIT_OPTION';\nfunction editMenuReducer(state, action) {\n  switch (action.type) {\n    case SHOW_EDIT_OPTION:\n      return true;\n    case HIDE_EDIT_OPTION:\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction handleDataUpdate(\n  e,\n  state,\n  setGenericState,\n  fieldName = e.target.attributes.name.value,\n  value = e.target.value,\n  callBack\n) {\n  state[fieldName] = value;\n  setGenericState(state);\n}\n\n//\n// ─── EMPLOYEEROW ────────────────────────────────────────────────────────────────\n//\nexport function EmployeeRow({ row, idx }) {\n  const classes = useStyles();\n  const [editMenu, dispatchEditMenu] = useReducer(editMenuReducer, false);\n  const { dispatchEmployees, newEmployeeId, setNewEmployeeId } = useContext(EmployeeContext);\n\n  if (!row) {\n    row = new EmployeeInfo(UPDATE, newEmployeeId);\n  }\n  const [employeeData, setEmployeeData] = useState(row);\n\n  return (\n    <TableRow\n      onMouseEnter={() => dispatchEditMenu({ type: SHOW_EDIT_OPTION })}\n      onMouseLeave={() => dispatchEditMenu({ type: HIDE_EDIT_OPTION })}>\n      <TableCell>\n        {/* name fields */}\n        {employeeData.io === READ ? (\n          row.fullName\n        ) : (\n          <TextField\n            name=\"fullName\"\n            defaultValue={row.fullName}\n            onChange={e => {\n              handleDataUpdate(e, employeeData, setEmployeeData);\n            }}\n          />\n        )}\n      </TableCell>\n      <TableCell>\n        {/* role fields */}\n        {employeeData.io === READ ? (\n          row.role\n        ) : (\n          <Suggestion\n            name=\"role\"\n            callBack={eventValue => {\n              handleDataUpdate(null, employeeData, setEmployeeData, 'role', eventValue);\n            }}\n            {...{ suggestions: roles, defaultVal: employeeData.role, placeholder: employeeData.role }}\n          />\n        )}\n      </TableCell>\n      <TableCell>\n        {/* time fields */}\n        {row.io === READ ? (\n          new Date(row.startDate).toLocaleDateString('en-us')\n        ) : (\n          <DatePickers\n            defaultTime={row.startDate}\n            name=\"startDate\"\n            handle={e => {\n              handleDataUpdate(e, employeeData, setEmployeeData, 'startDate', e.target.value);\n            }}\n          />\n        )}\n      </TableCell>\n      <TableCell>\n        {isValidData(employeeData) && employeeData.io === UPDATE ? (\n          // TODO: valid check to show\n          <CheckIcon\n            className={classes.icon}\n            onClick={e => {\n              if (newEmployeeId) {\n                setNewEmployeeId(id => {\n                  return id + 1;\n                });\n                handleDataUpdate(null, employeeData, setEmployeeData, 'io', READ);\n                dispatchEmployees({ type: CREATE, data: employeeData });\n                setEmployeeData(new EmployeeInfo(UPDATE, newEmployeeId + 1));\n              } else {\n                dispatchEmployees({ type: READ, id: idx });\n              }\n            }}\n          />\n        ) : editMenu ? (\n          <>\n            <EditIcon\n              className={classes.icon}\n              onClick={() => dispatchEmployees({ type: UPDATE, id: idx, data: employeeData })}\n            />\n            <DeleteIcon className={classes.icon} onClick={() => dispatchEmployees({ type: DELETE, id: idx })} />\n          </>\n        ) : (\n          <></>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n}\n// ────────────────────────────────────────────────────────────────────────────────\n\n//\n// ─── TIMEOFFROW ─────────────────────────────────────────────────────────────────\n//\nexport function TimeOffRow({ idx, row, nameSuggestions, newVacationId, setNewVacationId, nameIdTable }) {\n  if (!row) {\n    row = new TimeOffInfo(UPDATE, newVacationId);\n  }\n  const { io, fullName, timeOffStart, timeOffEnd } = row;\n  const classes = useStyles();\n  const [editMenu, dispatchEditMenu] = useReducer(editMenuReducer, false);\n  const { dispatchVacations } = useContext(VacationContext);\n  const [vacationData, setVacationData] = useState(row);\n\n  return (\n    <TableRow\n      onMouseEnter={() => dispatchEditMenu({ type: SHOW_EDIT_OPTION })}\n      onMouseLeave={() => dispatchEditMenu({ type: HIDE_EDIT_OPTION })}>\n      <TableCell>\n        {newVacationId ? (\n          <Suggestion\n            name=\"fullName\"\n            callBack={eventValue => {\n              handleDataUpdate(null, vacationData, setVacationData, 'employeeId', nameIdTable[eventValue]);\n            }}\n            {...{ suggestions: nameSuggestions, defaultVal: '', placeholder: 'Search Employee' }}\n          />\n        ) : (\n          fullName\n        )}\n      </TableCell>\n      <TableCell>\n        {/* time fields */}\n        {io === READ ? (\n          new Date(timeOffStart).toLocaleDateString('en-us')\n        ) : (\n          <DatePickers\n            defaultTime={timeOffStart}\n            name=\"timeOffStart\"\n            handle={e => {\n              handleDataUpdate(e, vacationData, setVacationData, 'timeOffStart', e.target.value);\n            }}\n          />\n        )}\n      </TableCell>\n      <TableCell>\n        {/* time fields */}\n        {io === READ ? (\n          new Date(timeOffEnd).toLocaleDateString('en-us')\n        ) : (\n          <DatePickers\n            defaultTime={timeOffEnd}\n            name=\"timeOffEnd\"\n            handle={e => {\n              handleDataUpdate(e, vacationData, setVacationData, 'timeOffEnd', e.target.value);\n            }}\n          />\n        )}\n      </TableCell>\n      <TableCell>\n        {isValidData(vacationData) && io === UPDATE ? (\n          // TODO: valid check to show\n          <CheckIcon\n            className={classes.icon}\n            onClick={() => {\n              if (newVacationId) {\n                setNewVacationId(id => {\n                  return id + 1;\n                });\n                handleDataUpdate(null, vacationData, setVacationData, 'io', READ);\n                dispatchVacations({ type: CREATE, data: vacationData });\n\n                setVacationData(new TimeOffInfo(UPDATE, newVacationId + 1));\n              } else {\n                dispatchVacations({ type: READ, id: idx });\n              }\n            }}\n          />\n        ) : editMenu ? (\n          <>\n            <EditIcon\n              className={classes.icon}\n              onClick={() => dispatchVacations({ type: UPDATE, id: idx, data: vacationData })}\n            />\n            <DeleteIcon className={classes.icon} onClick={() => dispatchVacations({ type: DELETE, id: idx })} />\n          </>\n        ) : (\n          <></>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n}\n\n// ────────────────────────────────────────────────────────────────────────────────\n","/* eslint-disable no-script-url */\n\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useForceUpdate from 'use-force-update';\n\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport { EmployeeRow, TimeOffRow } from './DataRows';\nimport { EmployeeContext, VacationContext } from './Dashboard';\nimport { getVacationRows, getNameSuggestions, getNameIdTable, SORT_OPTIONS } from './utils';\nconst { SORT_BY_FULLNAME, SORT_BY_ROLE, SORT_BY_STARTDATE, SORT_BY_TIMEOFFSTART, SORT_BY_TIMEOFFEND } = SORT_OPTIONS;\n\nconst useStyles = makeStyles({\n  table: {\n    tableLayout: 'fixed'\n  }\n});\n\n//\n// ─── EMPLOYEES ──────────────────────────────────────────────────────────────────\n//\n\nexport function Employees() {\n  const classes = useStyles();\n  const { employees, dispatchEmployees, newEmployeeId, setNewEmployeeId } = useContext(EmployeeContext);\n  const [displayCount, setDisplayCount] = useState(3);\n  const forceUpdate = useForceUpdate();\n\n  return (\n    <>\n      <Title>Recent Employees</Title>\n      <Table size=\"small\" className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              name=\"fullName\"\n              onClick={() => {\n                dispatchEmployees({ type: SORT_BY_FULLNAME });\n                forceUpdate();\n              }}>\n              Name\n            </TableCell>\n            <TableCell\n              name=\"role\"\n              onClick={() => {\n                dispatchEmployees({ type: SORT_BY_ROLE });\n                forceUpdate();\n              }}>\n              Role\n            </TableCell>\n            <TableCell\n              name=\"startDate\"\n              onClick={() => {\n                dispatchEmployees({ type: SORT_BY_STARTDATE });\n                forceUpdate();\n              }}>\n              Start Date\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* New Employee Input */}\n          <EmployeeRow className=\"employee-row-input\" {...{ newEmployeeId, setNewEmployeeId }} />\n          {employees\n            .filter((ele, idx) => idx < displayCount)\n            .map((row, idx) => {\n              return <EmployeeRow {...{ row, key: idx, idx }} />;\n            })}\n        </TableBody>\n      </Table>\n      <div className=\"employees-seemore\">\n        <Link color=\"primary\" onClick={() => setDisplayCount(displayCount + 3)}>\n          See more Employees\n        </Link>\n      </div>\n    </>\n  );\n}\n\n//\n// ─── TIMEOFF ────────────────────────────────────────────────────────────────────\n//\n\nexport function TimeOff() {\n  const classes = useStyles();\n  const { dispatchVacations, employeeIDs, employees, vacations, newVacationId, setNewVacationId } = useContext(\n    VacationContext\n  );\n  const vacationRows = getVacationRows(vacations, employees, employeeIDs);\n  const nameSuggestions = getNameSuggestions(employees);\n  const [displayCount, setDisplayCount] = useState(3);\n\n  const nameIdTable = getNameIdTable(employees);\n  const forceUpdate = useForceUpdate();\n\n  return (\n    <>\n      <Title>Time Off</Title>\n      <Table size=\"small\" className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              name=\"fullName\"\n              onClick={() => {\n                dispatchVacations({ type: SORT_BY_FULLNAME });\n                forceUpdate();\n              }}>\n              Name\n            </TableCell>\n            <TableCell\n              name=\"timeOffStart\"\n              onClick={() => {\n                dispatchVacations({ type: SORT_BY_TIMEOFFSTART });\n                forceUpdate();\n              }}>\n              Time-Off Start\n            </TableCell>\n            <TableCell\n              name=\"timeOffEnd\"\n              onClick={() => {\n                dispatchVacations({ type: SORT_BY_TIMEOFFEND });\n                forceUpdate();\n              }}>\n              Time-Off End\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TimeOffRow\n            className=\"timeoff-row-input\"\n            {...{ newVacationId, setNewVacationId, nameIdTable, nameSuggestions }}\n          />\n          {vacationRows\n            .filter((ele, idx) => idx < displayCount)\n            .map((row, idx) => (\n              // Existing Employee Input\n              <TimeOffRow {...{ row, key: row.id, idx }} />\n            ))}\n        </TableBody>\n      </Table>\n      <div className=\"vacations_seemore\">\n        <Link color=\"primary\" onClick={() => setDisplayCount(displayCount + 3)}>\n          See more Vacations\n        </Link>\n      </div>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));","import { EmployeeInfo, TimeOffInfo, roles, getNameSuggestions, IO_OPTIONS, getVacationRows } from './utils';\nconst { READ } = IO_OPTIONS;\n\nexport const employeeData = [\n  new EmployeeInfo(READ, 1, 'Paul', 'McCartney', roles[2].value, '2018-05-24'),\n  new EmployeeInfo(READ, 2, 'Tom', 'Scholz', roles[6].value, '2019-03-24'),\n  new EmployeeInfo(READ, 3, 'Michael', 'Jackson', roles[10].value, '2019-04-22'),\n  new EmployeeInfo(READ, 4, 'Bruce', 'Springsteen', roles[8].value, '2019-05-21'),\n  new EmployeeInfo(READ, 5, 'Elvis', 'Presley', roles[4].value, '2017-05-24')\n];\n\nexport const vacationData = [\n  new TimeOffInfo(READ, 1, 2, '2019-05-24', '2019-05-29'),\n  new TimeOffInfo(READ, 2, 3, '2019-05-25', '2018-06-05'),\n  new TimeOffInfo(READ, 3, 5, '2019-06-24', '2019-06-26'),\n  new TimeOffInfo(READ, 4, 3, '2019-07-25', '2019-08-24')\n];\n\nexport const names = getNameSuggestions(employeeData);\n","import React, { useReducer, useState } from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { MainListItems } from './listItems';\nimport { Employees, TimeOff } from './Employees';\nimport { useStyles } from './useStyles';\nimport { employeeData, vacationData } from './InitData';\nimport { IO_OPTIONS, SORT_OPTIONS, removeRow } from './utils';\nimport { VIEWS } from './listItems';\nconst { CREATE, READ, UPDATE, DELETE } = IO_OPTIONS;\nconst { SORT_BY_FULLNAME, SORT_BY_ROLE, SORT_BY_STARTDATE, SORT_BY_TIMEOFFSTART, SORT_BY_TIMEOFFEND } = SORT_OPTIONS;\n\n//\n// ─── CREATING CONTEXTS ──────────────────────────────────────────────────────────\n//\n\nexport const EmployeeContext = React.createContext();\nexport const VacationContext = React.createContext();\n\n//\n// ─── DEFINING DRAWER REDUCERS ───────────────────────────────────────────────────\n//\nconst DRAWER_OPEN = 'OPEN';\nconst DRAWER_CLOSE = 'CLOSE';\nconst drawerReducer = (state, action) => {\n  switch (action.type) {\n    case DRAWER_OPEN:\n      return true;\n    case DRAWER_CLOSE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//\n// ─── BOARVIEW REDUCER DEFINITION ────────────────────────────────────────────────────────\n//\nconst { EMPLOYEES, TIMEOFF } = VIEWS;\n\nconst viewReducer = (state, action) => {\n  switch (action.type) {\n    case EMPLOYEES:\n      return EMPLOYEES;\n    case TIMEOFF:\n      return TIMEOFF;\n    default:\n      return state;\n  }\n};\n\n//\n// ─── MAIN STATE REDUCER ─────────────────────────────────────────────────────────\n//\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CREATE:\n      if (action.data) {\n        state.unshift(action.data);\n      }\n      return state;\n    case UPDATE:\n      if (typeof action.id === 'number') {\n        const RowToEdit = state[action.id];\n        if (RowToEdit.io !== UPDATE) {\n          RowToEdit.io = UPDATE;\n          return state;\n        }\n      }\n      return state;\n    case READ:\n      if (typeof action.id === 'number') {\n        const RowToEdit = state[action.id];\n        if (RowToEdit.io !== READ) {\n          RowToEdit.io = READ;\n          return state;\n        }\n      }\n      return state;\n    case DELETE:\n      if (typeof action.id === 'number') {\n        return removeRow(state, action.id);\n      }\n      return state;\n    case SORT_BY_FULLNAME:\n      state.sort((a, b) => ('' + a.fullName).localeCompare(b.fullName));\n      return state;\n    case SORT_BY_ROLE:\n      state.sort((a, b) => ('' + a.role).localeCompare(b.role));\n      return state;\n    case SORT_BY_STARTDATE:\n      state.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n      return state;\n    case SORT_BY_TIMEOFFSTART:\n      state.sort((a, b) => new Date(a.timeOffStart) - new Date(b.timeOffStart));\n      return state;\n    case SORT_BY_TIMEOFFEND:\n      state.sort((a, b) => new Date(a.timeOffEnd) - new Date(b.timeOffEnd));\n      return state;\n    default:\n      return state;\n  }\n};\n\n//\n// ─── MAIN COMPONENT ─────────────────────────────────────────────────────────────\n//\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [isDrawerOpen, dispatchDrawer] = useReducer(drawerReducer, true);\n  const [view, dispatchView] = useReducer(viewReducer, EMPLOYEES);\n  const [employees, dispatchEmployees] = useReducer(reducer, employeeData);\n  const [vacations, dispatchVacations] = useReducer(reducer, vacationData);\n  const [newEmployeeId, setNewEmployeeId] = useState(10);\n  const [newVacationId, setNewVacationId] = useState(10);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={() => dispatchDrawer({ type: DRAWER_OPEN })}\n            className={clsx(classes.menuButton, isDrawerOpen && classes.menuButtonHidden)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Employee Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !isDrawerOpen && classes.drawerPaperClose)\n        }}\n        open={isDrawerOpen}>\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={() => dispatchDrawer({ type: DRAWER_CLOSE })}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <MainListItems {...{ dispatchView }} />\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Conditional View Selection */}\n            {\n              {\n                [EMPLOYEES]: (\n                  <EmployeeContext.Provider value={{ employees, dispatchEmployees, newEmployeeId, setNewEmployeeId }}>\n                    <Grid item xs={12}>\n                      <Paper className={classes.paper}>\n                        <Employees />\n                      </Paper>\n                    </Grid>\n                  </EmployeeContext.Provider>\n                ),\n                [TIMEOFF]: (\n                  <VacationContext.Provider\n                    value={{ employees, vacations, dispatchVacations, newVacationId, setNewVacationId }}>\n                    <Grid item xs={12}>\n                      <Paper className={classes.paper}>\n                        <TimeOff />\n                      </Paper>\n                    </Grid>\n                  </VacationContext.Provider>\n                )\n              }[view]\n            }\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}